

                                          Modsecurity Log Analyzer (MLA)
                                                 Copyright (C) 2019
                                             Fco. Javier Muñoz Calle

                                              Version 2.0 - 25/07/2019

                                                 README - English
------------------------------------------------------------------------------------------------------------------------------------------

CHANGELOG v1.0 (Fco. Javier Muñoz Calle)

- First functional version

CHANGELOG v2.0 (Fco. Javier Muñoz Calle)

- Search system optimization by creating "summaries" (files.index) of the log files.



COMPILATION

* REQUIREMENTS

- Linux system with the basic packages of POSIX shell-script. In principle, any Linux distribution is compatible.


* INSTALATION

- No compilation required (POSIX Shell-script).

-----------------------------------------------

DESCRIPTION

The program analyzes the URIs indicated in the input file and searches for them in the trace files (logs) type "modsec_audit.log" (ModSecurity),
indicating if they are detected as attacks (associated alerts).

To do this, the tool consists of 4 applications. For each one it is indicated:

a) Description
b) I / O: Input -> Output
c) Syntax (call)

Subsequently, the formats of the different types of files used are described in greater detail.

#########
1) MLA_generator.sh

a) Description: Receives an file "X-raw.uri" (similar ".clean" format)
   and generates a file with the name "X.uri" of type ".raw" (URI)

b) I / O: file-raw.uri -> file.uri

c) Syntax:
    MLA_generador.sh file-raw.uri [dir_out_uri]

     * "file-raw.uri": Text file "-raw.uri" with list of URIs to analyze.
     * "dir_out_uri": Folder to save the output file "file.uri" (local by default).
#########


#########
2) MLA_launcher.sh

a) Description: Receives an input text file with URIs (file.uri) and:
    * Generates (in the folder indicated as the second argument, local by default) a file
      of type ".time" (associates TimeStamp with URI).
    * Launch those URIs against the Web server (variable "SERVERURL" by default "http://localhost/")
    * Extract the generated log "modsec_audit.log" and copy it to the third argument folder as "file.log"

b) I/O: file.uri -> file.time, file.log

c) Syntax:
    MLA_launcher.sh file.uri dir_out_time dir_out_log

    * "file.uri": Text file ".uri" with list of URIs to analyze.
    * "dir_out_time": directory where to generate the file "file.time".
    * "dir_out_log": directory where to save the log (modsec_Audit.log) generated by Apache as "file.log"
#########


#########
3) MLA_analyzer.sh

a) Description: Receives an ".log" input file (modsec_audit.log format) and process it by generating
    a summary file ".index" with the attacks registered in the log.

b) I/O: file.log -> file.index

c) Syntax:
    MLA_analyzer.sh file.log [index_dir]

    * "file.log": Input log file (modsec_audit.log format) to analyze.
    * "index_dir": directory where to generate the summary file "file.index" (local by default).

    NOTE: Log files are searched in their standard location:
    * Folder: /var/log/httpd/
    * Name: modsec_audit.log
#########


#########
4) MLA_detector.sh

a) Description: Receives the files "file.time" and "file.index", and identify the attack and clean URIs.

b) I/O: file.time, file.index -> file.attacks, file.clean

c) Syntax:
    MLA_detector.sh file.time index_dir_out_attacks dir_out_clean

    * "file.time": Text file ".time" with the URIs analyzed (and their TimeStamp).
    * "dir_out_index": Directory in which to search for the file "file.log" with the associated Mod Security analysis.
    * "dir_out_attacks": Directory where to generate the attack file "file.attacks"
    * "dir_out_clean": Directory where to generate the clean traffic file "file.clean"
    NOTE: The same name is assumed as the input file "file.time" by changing the extension.#########


############################
FORMATO DE FICHEROS EMPLEADOS POR MLA (todos ficheros de texto)

1) "file-raw.uri": file with URIs to analyze and the number of characters of each one. Format:

	N_characters_URI URI


2) "file.uri": file with only the URIs to analyze. Format:

   URI


3) "file.time": file with the URIs sent to Apache Modsecurity for analysis and the TimeStamp in which they were sent. Format:

   [TIMESTAMP]\t[URI]

    NOTE: "\t" denotes "tabulation"

    Example:

   [23/Jul/2019:14:43:49 +0200]	[/educacion/educacion/noticias/scholar.google.com]


4) "modsec_audit.log": Log file generated by Mod Security with the details of the attack in "Sections".


5) "file.index": File summary with the data of interest of the "log", with one line per attack. Format:

    TimeStamp [TIMESTAMP]\tUri [URI]\tPLmin [n]\tScore [n]\tNattacks [n]\t[ID1]\t[ID2]...

    Fields:
     * PLmin (1-4, or empty = 1): Minimum PL (Paranoia Level of Mod Security) from which this URI is detected as an attack.
     * Score (0-5): Level of danger of the attack according to the OWASP CRS rules of ModSecurity.
     * Nattacks: Number of rules that have been activated with this URI.
     * "IDn": ID of the rules that have been activated.

    Example:

    TimeStamp [23/Jul/2019:14:43:49 +0200]  Uri [/educacion/educacion/noticias/scholar.google.com]  PLmin [2]    Score [5]       Nattacks [3]    [920440]        [949110]        [980130]


6) "file.attacks": Result of the analysis with the traffic detected as an attack. Format: after a summary header
    (Number of URIs analyzed, how many are attack and how many clean), each line has the format:

    Packet [Line_number]\tUri [URI]\tPLmin [n]\tScore [n]\tNattacks [n]\t[ID1]\t[ID2]...

    Fields:
    + Packet: Line number of the file "file-raw.uri" in which the URI referred to in the attack is located
              (obtained using the "TimeStamp" of the file "file.time")

    Example:

    ---------------------- Statistics of URIs analyzed------------------------
    [1] input, [0] clean, [1] attacks
    --------------------------- Analysis results -----------------------------
    Packet [296942] Uri [/educacion/educacion/noticias/scholar.google.com]  PLmin [2]        Score [5]  Nattacks [3]     [920440]        [949110]        [980130]


7) "file.clean": Result of the analysis with clean traffic. Format:

   N_characters_URI\tURI
